name: Frontend Build, push, and deploy
run-name: Frontend Build, push, and deploy to ${{ inputs.environment }} "${{ github.ref_name }}" by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment
        required: true
        default: test
        options:
          - test
          - prod
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        default: test
      version:
        type: string
        required: true

defaults:
  run:
    working-directory: 'frontend'

jobs:
  build-and-push:
    name: Build and push Docker container
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'read'
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com
          scope: '@navikt'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: npm run build

      - name: Build and push Docker image
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: idebanken
          docker_context: 'frontend'
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          tag: ${{ inputs.version || github.ref_name }}
          image_suffix: ${{ inputs.environment }}

  deploy-test:
    name: Deploy frontend
    needs: [build-and-push]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      CLUSTER: ${{ inputs.environment == 'prod' && 'prod-gcp' || 'dev-gcp' }}
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          DRY_RUN: false
          PRINT_PAYLOAD: true
          CLUSTER: ${{ env.CLUSTER }}
          WORKLOAD_IMAGE: ${{ needs.build-and-push.outputs.image }}
          RESOURCE: .nais/frontend.yml
          VARS: .nais/${{ env.CLUSTER }}/frontend.yml

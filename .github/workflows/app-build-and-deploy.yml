name: JVM app build and deploy
run-name: JVM app build and deploy - ${{ inputs.app_directory }} to ${{ inputs.environment }} by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment
        required: true
        default: test
        options:
          - test
          - prod
      app_directory:
        type: choice
        description: App to deploy. Used by build to postfix the artifact name
        required: true
        options:
          - idebanken-search-api
        default: "idebanken-search-api"
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      app_directory:
        type: string
        required: true
      version:
        type: string
        required: false

jobs:
  build:
    name: Build image and push to registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: read
    defaults:
      run:
        working-directory: apps/${{ inputs.app_directory }}
    env:
      CLUSTER: ${{ inputs.environment == 'prod' && 'prod-gcp' || 'dev-gcp' }}
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Build application
        run: |
          ./gradlew clean build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest git tag
        id: get_tag
        run: echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

      - name: Build and push docker image
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: idebanken
          docker_context: apps/${{ inputs.app_directory }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          tag: ${{ inputs.version || steps.get_tag.outputs.tag || github.ref_name }}
          image_suffix: ${{ inputs.environment }}-${{ inputs.app_directory }}

  deploy-to-nais:
    name: Deploy to nais
    needs: build
    permissions:
      contents: read
      id-token: write
    uses: ./.github/workflows/docker-deploy.yml
    with:
      app_directory: ${{ inputs.app_directory }}
      environment: ${{ inputs.environment }}
      image: ${{ needs.build.outputs.image }}

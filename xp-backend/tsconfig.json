{ // https://www.typescriptlang.org/tsconfig
	"compilerOptions": {
		//──────────────────────────────────────────────────────────────────────
		// Modules
		//──────────────────────────────────────────────────────────────────────
		"allowUmdGlobalAccess": true,
		"baseUrl": "./",
		"moduleResolution": "node",

		"paths": {
			"/lib/xp/*": ["node_modules/@enonic-types/lib-*"],
			"/*": ["src/main/resources/*"], // So one can import local files using absolute path (same as Enonic does during runtime).
		},

		// By default all visible ”@types” packages are included in your compilation.
		// Packages in node_modules/@types of any enclosing folder are considered visible.
		// For example, that means packages within ./node_modules/@types/,
		// ../node_modules/@types/, ../../node_modules/@types/, and so on.
		// If typeRoots is specified, only packages under typeRoots will be included.
		"typeRoots": [
			"node_modules/@types",
			"node_modules/@enonic-types"
		],

		"types": [
			"global" // Already added via typeRoots? nope, doesn't work that way
		],

		//──────────────────────────────────────────────────────────────────────
		// Interop Constraints
		//──────────────────────────────────────────────────────────────────────
		"allowSyntheticDefaultImports": true,
		"esModuleInterop": true,

		//──────────────────────────────────────────────────────────────────────
		// Language and Environment
		//──────────────────────────────────────────────────────────────────────
		"lib": [],

		//──────────────────────────────────────────────────────────────────────
		// Completeness
		//──────────────────────────────────────────────────────────────────────
		"skipLibCheck": true,
	},
	"exclude": [
		"src/main/resources/assets/**/*.*",
		"src/main/resources/static/**/*.*",
	],
	"include": [
		// Make sure default types matches Nashorn
		"node_modules/typescript/lib/lib.es5.d.ts",

		"src/main/resources/**/*.tsx",
		"src/main/resources/**/*.ts"
	]
}

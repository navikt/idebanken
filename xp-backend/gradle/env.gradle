import org.codehaus.groovy.runtime.MethodClosure

def hasEnvironment()
{
    return hasProperty( 'env' )
}

def isProd()
{
    return hasEnvironment() ? ( env.toString() == 'prod' ) : false
}

def getEnvironmentShort()
{
    return isProd() ? 'prod' : 'dev'
}

def nodeEnvironment()
{
    def environments = [prod: 'production', dev: 'development']
    def nodeEnv = environments[hasEnvironment() ? env : 'prod']
    return nodeEnv != null ? nodeEnv : 'production'
}

ext {
    hasEnvironment = this.&hasEnvironment as MethodClosure
    getEnvironmentShort = this.&getEnvironmentShort as MethodClosure
    isProd = this.&isProd as MethodClosure
    nodeEnvironment = this.&nodeEnvironment as MethodClosure
}
